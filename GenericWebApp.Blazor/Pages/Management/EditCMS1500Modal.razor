@using GenericWebApp.DTO.Management
@using GenericWebApp.BLL.Management
@using GenericWebApp.Blazor.Shared.Common
@inject MedicalCMS1500Service myService

@code {
    [Parameter]
    public EventCallback OnCMS1500Saved { get; set; }

    private CMS1500Form cms1500;
    private bool isVisible = false;
    private string activeTab = "claimant";
    private string claimantTab = "claimant";
    private string tasksTab = "tasks";

    public void Show(int? ID)
    {
        if (ID.HasValue)
        {
            myService.GetItem(new MedicalCMS1500SeachDTO() { ID = ID.Value });
            cms1500 = myService.Response.Item!;
        }

        SetActiveTab(claimantTab);
        isVisible = true;
        this.StateHasChanged();
    }

    public void Show(CMS1500Form form)
    {
        cms1500 = form;

        SetActiveTab(claimantTab);
        isVisible = true;
    }

    private async Task SaveCMS1500()
    {
        if (cms1500 == null) return;

        await myService.SaveItemAsync(cms1500);
        if (myService.Response.ErrorList.Count == 0)
        {
            isVisible = false;
            await OnCMS1500Saved.InvokeAsync();
        }
    }

    private async Task CancelCMS1500()
    {
        isVisible = false;
        await OnCMS1500Saved.InvokeAsync();
    }

    private void SetActiveTab(string tabName)
    {
        activeTab = tabName;
    }
}

@if (isVisible && cms1500 != null)
{
    <div class="modal-backdrop">
        <div class="modal show d-block" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit CMS1500 Form</h5>
                        <button type="button" class="btn-close" @onclick="CancelCMS1500"></button>
                    </div>
                    <EditForm Model="@cms1500">
                        <div class="modal-body">
                            <DisplayError ErrorList="@myService.Response.ErrorList" />
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <ul class="nav nav-tabs">
                                <li class="nav-item">
                                    <a class="nav-link @(activeTab == "claimant" ? "active" : "")" @onclick="() => SetActiveTab(claimantTab)">Claimant Information</a>
                                </li>
                                @if(cms1500.ID != 0){
                                    <li class="nav-item">
                                        <a class="nav-link @(activeTab == "tasks" ? "active" : "")" @onclick="() => SetActiveTab(tasksTab)">Tasks</a>
                                    </li>
                                }
                            </ul>

                            <div class="tab-content mt-3">
                                <div class="tab-pane fade @(activeTab == "claimant" ? "show active" : "")">
                                    <ClaimantForm Claimant="@cms1500.Claimant" />
                                </div>
                                <div class="tab-pane fade @(activeTab == "tasks" ? "show active" : "")">
                                    @if (cms1500.ID != 0){
                                        <TaskList IsSubModal="true" TaskObjectTypeCode="CLAIM" TaskObjectID="@cms1500.ID" />
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer fade @(activeTab == "claimant" ? "show active" : "")">
                            <button type="submit" class="btn btn-primary" @onclick=SaveCMS1500>Save</button>
                            <button type="button" class="btn btn-secondary" @onclick="CancelCMS1500">Cancel</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1050;
    }

    .modal-dialog-centered {
        max-width: 80%;
        max-height: 80%; /* Ensure the modal dialog has a max height */
    }

    .modal-content {
        display: flex;
        flex-direction: column;
        max-height: 100%;
        overflow: hidden;
    }

    .modal-body {
        flex: 1 1 auto;
        overflow-y: auto;
        max-height: calc(100vh - 200px); /* Adjust height to leave space for header and footer */
    }

    .modal-footer {
        flex-shrink: 0;
    }
</style>
