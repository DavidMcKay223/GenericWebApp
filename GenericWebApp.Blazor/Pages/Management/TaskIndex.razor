@page "/Management/Tasks"
@inject BLL.Management.TaskService myService

@if (createNewTask)
{
    <TaskItemComponent TaskItem="@TaskItem" Service="@myService" DisplayCreate="@ButtonNew"></TaskItemComponent>
}
else
{
    <div class="container">
        <h1 class="my-4 text-center">Tasks</h1>

        <EditForm Model="@searchParams">
            <div class="row g-3">
                <div class="col-md-4">
                    <label for="text_TaskTitle" class="form-label">Task Title</label>
                    <InputText id="text_TaskTitle" class="form-control" @bind-Value="searchParams.TaskTitle" />
                </div>
                <div class="col-md-4">
                    <label for="text_TaskDescription" class="form-label">Task Description</label>
                    <InputText id="text_TaskDescription" class="form-control" @bind-Value="searchParams.TaskDescription" />
                </div>
                <div class="col-md-4">
                    <label for="text_TaskObjectType_Code" class="form-label">Task Object Type</label>
                    <InputText id="text_TaskObjectType_Code" class="form-control" @bind-Value="searchParams.TaskObjectType_Code" />
                </div>
            </div>
        </EditForm>

        <div class="my-3 text-center">
            <button class="btn btn-primary me-2" @onclick="@ButtonSearch">Search</button>
            <button class="btn btn-danger" @onclick="@ButtonReset">Reset</button>
        </div>

        @if (myService.Response.Error != null)
        {
            <div class="alert alert-danger">
                @myService.Response.Error.Message
            </div>
        }

        @if (TaskList != null)
        {
            <div class="row g-3">
                @foreach (DTO.Management.TaskItem task in TaskList)
                {
                    <div class="col-md-6">
                        <div class="card mb-3">
                            <div class="card-header">
                                <h4>@task.Title</h4>
                            </div>
                            <div class="card-body">
                                <p>@task.Description</p>
                            </div>
                            <div class="card-footer">
                                <button class="btn btn-primary me-2" @onclick="(() => { TaskItem = task; createNewTask = !createNewTask; })">Edit</button>
                                <button class="btn btn-danger" @onclick="() => ButtonDeleteTask(task)">Remove</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }

        <div class="my-3 text-center">
            <button class="btn btn-primary" @onclick="@ButtonNew">New</button>
        </div>
    </div>
}

@code {
    private BLL.Management.TaskSeachDTO searchParams;
    private List<DTO.Management.TaskItem> TaskList;
    private DTO.Management.TaskItem TaskItem;

    private Boolean createNewTask = false;

    protected override async Task OnInitializedAsync()
    {
        searchParams = new BLL.Management.TaskSeachDTO();
        await LoadTasksAsync();
    }

    async Task LoadTasksAsync()
    {
        TaskList = await myService.GetListAsync(searchParams);
    }

    async Task ButtonSearch()
    {
        await LoadTasksAsync();
    }

    async Task ButtonReset()
    {
        searchParams = new BLL.Management.TaskSeachDTO();
        await LoadTasksAsync();
    }

    async Task ButtonDeleteTask(DTO.Management.TaskItem task)
    {
        await myService.DeleteItemAsync(task);
        await LoadTasksAsync();
    }

    async Task ButtonNew()
    {
        TaskItem = null;
        createNewTask = !createNewTask;
    }
}
