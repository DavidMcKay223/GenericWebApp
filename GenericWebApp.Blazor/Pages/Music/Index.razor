@page "/Music/"

@if (createNewAlbum)
{
    <MusicItemComponent Album="@Album" Service="@myService" DisplayCreate="@ButtonNew"></MusicItemComponent>
}
else
{
    <h1>Music</h1>

    <EditForm Model="@searchParams">
        <form class="row g-3">
            <div class="col-md-4">
                <label for="text_ArtistName" class="form-label">Artist Name</label>
                <InputText id="text_ArtistName" class="form-control" @bind-Value="searchParams.ArtistName" />
            </div>
            <div class="col-md-4">
                <label for="text_CdName" class="form-label">CD Name</label>
                <InputText id="text_CdName" class="form-control" @bind-Value="searchParams.CdName" />
            </div>
            <div class="col-md-4">
                <label for="text_TrackTitle" class="form-label">Track Title</label>
                <InputText id="text_TrackTitle" class="form-control" @bind-Value="searchParams.TrackTitle" />
            </div>
        </form>
    </EditForm>

    <br />

    <input type="button" value="Search" class="btn btn-primary" @onclick="@ButtonSearch" />
    <input type="button" value="Reset" class="btn btn-danger" @onclick="@ButtonReset" />

    @if (myService.Response.Error != null)
    {
        <label class="form-text text-danger">@myService.Response.Error.Message</label>
    }

    @if (AlbumList != null)
    {
        <br /><br />
        <div class="row g-3">
            @foreach (DTO.Music.Album album in AlbumList)
            {
                <div class="col-md-6 card p-2">
                    <div class="card-title">
                        <h4><label class="form-text">@album.ArtistName</label></h4>
                    </div>
                    <div class="card-body">
                        <div class="row g-3 card-deck">
                            @if (album.CDList != null)
                            {
                                foreach (DTO.Music.CD cd in album.CDList)
                                {
                                    <div class="card p-2">
                                        <div class="card-title">
                                            <h5><label class="form-text">@cd.Name (@cd.Genere)</label></h5>
                                        </div>
                                        <div class="card-body">
                                            <label class="form-text">Track</label>
                                            <ul class="list-group">
                                                @if(cd.TrackList != null)
                                                {
                                                    @foreach (DTO.Music.Track track in cd.TrackList)
                                                    {
                                                        <li class="list-group-item">
                                                            <label class="form-text">@track.Number</label>
                                                            <label class="form-text">@track.Title</label>
                                                            <label class="form-text">@track.Length.ToString("mm\\:ss")</label>
                                                        </li>
                                                    }
                                                }
                                            </ul>
                                        </div>
                                        <div class="card-footer border-white">
                                            <input type="button" value="Remove" class="btn btn-danger" @onclick="(() => { album.CDList.Remove(cd); myService.SaveItem(album); })" />
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <div class="card-footer border-white">
                        <input type="button" value="Edit" class="btn btn-primary" @onclick="(() =>{ Album = album; createNewAlbum = !createNewAlbum; })" />
                        <input type="button" value="Remove" class="btn btn-danger" @onclick="() => myService.DeleteItem(album)" />
                    </div>
                </div>
            }
        </div>
    }

    <br />

    <input type="button" value="New" class="btn btn-primary" @onclick="@ButtonNew" />
}

@code {
    private BLL.Music.Service myService = new BLL.Music.Service();
    private BLL.Music.MusicSearchDTO searchParams;
    private List<DTO.Music.Album> AlbumList;
    private DTO.Music.Album Album;

    private Boolean createNewAlbum = false;

    protected async override void OnInitialized()
    {
        searchParams = new BLL.Music.MusicSearchDTO();
        AlbumList = await myService.GetList(searchParams);
    }

    async Task ButtonSearch()
    {
        AlbumList = await myService.GetList(searchParams);
    }

    async Task ButtonReset()
    {
        searchParams = new BLL.Music.MusicSearchDTO();
        AlbumList = await myService.GetList(searchParams);
    }

    async Task ButtonNew()
    {
        Album = null;
        createNewAlbum = !createNewAlbum;
    }
}
