@using GenericWebApp.DTO.Template
@using GenericWebApp.BLL.Template
@using GenericWebApp.Blazor.Shared.Common
@inject TemplateService myService

@code {
    [Parameter]
    public EventCallback OnTemplateSaved { get; set; }

    private TemplateItem? templateItem;
    private bool isVisible = false;

    public void ShowTemplateModal(TemplateItem template)
    {
        templateItem = template;
        isVisible = true;
    }

    private async Task SaveTemplate()
    {
        if (templateItem == null) return;

        await myService.SaveItemAsync(templateItem);
        if (myService.Response.ErrorList.Count == 0)
        {
            isVisible = false;
            await OnTemplateSaved.InvokeAsync();
        }
    }

    private void CancelTemplateModal()
    {
        isVisible = false;
    }
}

@if (isVisible && templateItem != null)
{
    <div class="modal-backdrop">
        <div class="modal show d-block" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content" style="height: 80%;">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Template</h5>
                        <button type="button" class="btn-close" @onclick="CancelTemplateModal"></button>
                    </div>
                    <EditForm Model="@templateItem">
                        <div class="modal-body">
                            <DataAnnotationsValidator />
                            <div class="mb-3 form-floating">
                                <InputText id="title" class="form-control" @bind-Value="templateItem!.Title" />
                                <label for="title">Title</label>
                                <ValidationMessage For="@(() => templateItem.Title)" />
                            </div>
                            <div class="mb-3 form-floating" style="height: 250px;">
                                <InputTextArea id="description" class="form-control" @bind-Value="templateItem.Description" style="height: 100%;" />
                                <label for="description">Description</label>
                                <ValidationMessage For="@(() => templateItem.Description)" />
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="card mb-3">
                                        <div class="card-header">
                                            <h5 class="card-title">Primary Address</h5>
                                        </div>
                                        <div class="card-body">
                                            <FormAddressTemplate Address="@templateItem.PrimaryAddress" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="card mb-3">
                                        <div class="card-header">
                                            <h5 class="card-title">Secondary Address</h5>
                                        </div>
                                        <div class="card-body">
                                            <FormAddressTemplate Address="@templateItem.SecondaryAddress" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary" @onclick="SaveTemplate">Save</button>
                            <button type="button" class="btn btn-secondary" @onclick="CancelTemplateModal">Cancel</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

<style>
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1050;
    }

    .modal-dialog-centered {
        max-width: 80%;
        max-height: 80%;
    }

    .modal-content {
        display: flex;
        flex-direction: column;
        max-height: 100%;
        overflow: hidden;
    }

    .modal-body {
        flex: 1 1 auto;
        overflow-y: auto;
        max-height: calc(100vh - 200px);
    }

    .modal-footer {
        flex-shrink: 0;
    }
</style>
