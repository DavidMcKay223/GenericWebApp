@page "/Music"
@inject BLL.Music.Service myService

@if (createNewAlbum)
{
    <MusicItemComponent Album="@Album" Service="@myService" DisplayCreate="@ButtonNew"></MusicItemComponent>
}
else
{
    <div class="container">
        <h1 class="my-4 text-center">Music</h1>

        <EditForm Model="@searchParams">
            <div class="row g-3">
                <div class="col-md-3">
                    <label for="text_ArtistName" class="form-label">Artist Name</label>
                    <InputText id="text_ArtistName" class="form-control" @bind-Value="searchParams.ArtistName" />
                </div>
                <div class="col-md-3">
                    <label for="text_CdName" class="form-label">CD Name</label>
                    <InputText id="text_CdName" class="form-control" @bind-Value="searchParams.CdName" />
                </div>
                <div class="col-md-3">
                    <label for="text_TrackTitle" class="form-label">Track Title</label>
                    <InputText id="text_TrackTitle" class="form-control" @bind-Value="searchParams.TrackTitle" />
                </div>
                <div class="col-md-3">
                    <label for="text_CdLabel" class="form-label">Label</label>
                    <InputText id="text_CdLabel" class="form-control" @bind-Value="searchParams.CdLabel" />
                </div>
            </div>
        </EditForm>

        <div class="my-3 text-center">
            <button class="btn btn-primary me-2" @onclick="@ButtonSearch">Search</button>
            <button class="btn btn-danger" @onclick="@ButtonReset">Reset</button>
        </div>

        @if (myService.Response.Error != null)
        {
            <div class="alert alert-danger">
                @myService.Response.Error.Message
            </div>
        }

        @if (AlbumList != null)
        {
            <div class="row g-3">
                @foreach (DTO.Music.Album album in AlbumList)
                {
                    <div class="col-md-6">
                        <div class="card mb-3">
                            <div class="card-header">
                                <h4>@album.ArtistName</h4>
                            </div>
                            <div class="card-body">
                                @if (album.CDList != null)
                                {
                                    @foreach (DTO.Music.CD cd in album.CDList)
                                    {
                                        <div class="card mb-3">
                                            <div class="card-header">
                                                <h5>@cd.Name (@cd.Genre_ID)</h5>
                                                <h6>@cd.LabelObj</h6>
                                            </div>
                                            <div class="card-body">
                                                <label>Track</label>
                                                <ul class="list-group">
                                                    @if(cd.TrackList != null)
                                                    {
                                                        @foreach (DTO.Music.Track track in cd.TrackList)
                                                        {
                                                            <li class="list-group-item">
                                                                <span class="fw-bold">@track.Number</span>
                                                                <span>@track.Title</span>
                                                                <span class="text-muted">@track.Length.ToString("mm\\:ss")</span>
                                                            </li>
                                                        }
                                                    }
                                                </ul>
                                            </div>
                                            <div class="card-footer">
                                                <button class="btn btn-danger" @onclick="() => ButtonDeleteCD(album, cd)">Remove</button>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                            <div class="card-footer">
                                <button class="btn btn-primary me-2" @onclick="(() => { Album = album; createNewAlbum = !createNewAlbum; })">Edit</button>
                                <button class="btn btn-danger" @onclick="() => ButtonDeleteAlbum(album)">Remove</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }

        <div class="my-3 text-center">
            <button class="btn btn-primary" @onclick="@ButtonNew">New</button>
        </div>
    </div>
}

@code {
    private BLL.Music.MusicSearchDTO searchParams;
    private List<DTO.Music.Album> AlbumList;
    private DTO.Music.Album Album;

    private Boolean createNewAlbum = false;

    protected override async Task OnInitializedAsync()
    {
        searchParams = new BLL.Music.MusicSearchDTO();
        await LoadAlbumsAsync();
    }

    async Task LoadAlbumsAsync()
    {
        AlbumList = await myService.GetListAsync(searchParams);
    }

    async Task ButtonSearch()
    {
        await LoadAlbumsAsync();
    }

    async Task ButtonReset()
    {
        searchParams = new BLL.Music.MusicSearchDTO();
        await LoadAlbumsAsync();
    }

    async Task ButtonDeleteAlbum(DTO.Music.Album album)
    {
        await myService.DeleteItemAsync(album);
        await LoadAlbumsAsync();
    }

    async Task ButtonDeleteCD(DTO.Music.Album album, DTO.Music.CD cd)
    {
        album.CDList.Remove(cd);
        await myService.SaveItemAsync(album);
        await LoadAlbumsAsync();
    }

    async Task ButtonNew()
    {
        Album = null;
        createNewAlbum = !createNewAlbum;
    }
}
